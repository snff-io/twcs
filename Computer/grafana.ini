[server]
# The http port to use
http_port = 3000

[dataproxy]
# This section controls the network options for the server.
# The ip to bind to, empty will bind to all interfaces
;http_addr =

# The ip to bind to for UDP services (log & statsd)
;http_addr_udp =

# The http port to use
;http_port = 3000

# The public facing domain name used to access grafana from a browser
;domain = localhost

# Redirect to correct domain if host header does not match domain
# Prevents DNS rebinding attacks
;enforce_domain = false

# The full public facing url you use in browser, used for redirects and emails
# If you use reverse proxy and sub path specify full url (with sub path)
;root_url = %(protocol)s://%(domain)s:%(http_port)s/

# Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
;serve_from_sub_path = false

# Log web requests
;router_logging = false

# the path relative working path
;static_root_path = public

# enable gzip
;enable_gzip = false

[analytics]
# Server reporting, sends usage counters to stats.grafana.org every 24 hours.
# No ip addresses are being tracked, only simple counters to track
# running instances, dashboard and error counts. It is very helpful to us.
# Change this option to false to disable reporting.
;reporting_enabled = true

[security]
# Set to true to disable (hide) the login form, useful if you use OAuth
;disable_login_form = false

# Set to true to disable the password change feature
;disable_password_change = false

# Set to true to block user signups
;disable_signout_menu = false

# Sets the expiration in days for the recovery link
;password_reset_timeout_days = 7

# Set to true to enable support for http method override. Useful for passing
# through http posts in environments where only http get is allowed.
;allow_embedding = false

# Set to true to enable brute force protection
;cookie_secure = true

# Set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. Default is false.
;allow_embedding = false

# Set to true if you want to deny browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. Default is false.
;allow_external_links = false

# Set the HTTP method to use for csrf token generation (POST, PUT, PATCH, GET). Default is POST.
;csrf_token_method = POST

# The maximum time a client can remain idle before being logged off.
;cookie_samesite = lax

[users]
# disable user signup / registration
allow_sign_up = false

# Default role new users will be automatically assigned
;auto_assign_org_role = Viewer

[auth]
# Set to true to disable (hide) the login form, useful if you use OAuth
;disable_login_form = false

# Set to true to disable the password change feature
;disable_password_change = false

# Set to true to block user signups
;disable_signout_menu = false

# Sets the expiration in days for the recovery link
;password_reset_timeout_days = 7

# Set to true to enable support for http method override. Useful for passing
# through http posts in environments where only http get is allowed.
;allow_embedding = false

# Set to true to enable brute force protection
;cookie_secure = true

# Set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. Default is false.
;allow_embedding = false

# Set to true if you want to deny browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. Default is false.
;allow_external_links = false

# Set the HTTP method to use for csrf token generation (POST, PUT, PATCH, GET). Default is POST.
;csrf_token_method = POST

# The maximum time a client can remain idle before being logged off.
;cookie_samesite = lax

[auth.anonymous]
# enable anonymous access
;enabled = false

# specify organization name that should be used for unauthenticated users
;org_name = Main Org.

# specify role for unauthenticated users
;org_role = Viewer

# mask the Grafana version number for unauthenticated users.
;hide_version = false

[auth.github]
# GitHub OAuth settings
enabled = false
allow_sign_up = true
client_id = some_id
client_secret = some_secret
scopes = user:email,read:org
auth_url = https://github.com/login/oauth/authorize
token_url = https://github.com/login/oauth/access_token
api_url = https://api.github.com/user

[auth.google]
# Google OAuth settings
enabled = false
allow_sign_up = true
client_id = some_client_id
client_secret = some_client_secret
scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
auth_url = https://accounts.google.com/o/oauth2/auth
token_url = https://accounts.google.com/o/oauth2
